@startuml
'https://plantuml.com/class-diagram

left to right direction
'top to bottom direction

scale 1200 width

package org.woehlke.java.simpleworklist.domain {

    package mvc {
        class ContextController {}
        class PagesController {}
        class ProjectIdController {}
        class ProjectIdTaskMoveController {}
        class ProjectRootController {}
        class ProjectRootTaskController {}
        class ProjectRootTaskMoveController {}
        class SearchController {}
        class TaskLifecycleController {}
        class TaskMove2TaskController {}
        class TaskMoveController {}
        class TaskStateTabController {}
        class TestDataController {}
        class UserChatMessageController {}
        class UserLoginController {}
        class UserPasswordRecoveryController {}
        class UserRegistrationController {}
        class UserSelfserviceController {}
    }

    package db {
        package data {
            class ContextService {}
            class ProjectService {}
            class TaskService {}
            class ProjectRepository {}
            class TaskRepository {}
        }
        package seearch {
            class SearchService {}
        }
        package user {
            class UserAccountService {}
            class UserAccountPasswordService {}
            class ChatMessageService {}
            class UserAccountPasswordRecoveryService {}
            class UserAccountRegistrationService {}
            class TokenGeneratorService {}
        }
    }
    package security {
        class UserAuthorizationService {}
        class ApplicationUserDetailsService {}
        class LoginSuccessService {}
    }
    package meso {
        class ProjectControllerService {
            void addNewProjectToProjectIdForm(long projectId, UserSessionBean userSession,Context context, Locale locale, Model model)
            void addNewProjectToProjectRootForm(UserSessionBean userSession, Context context,Locale locale, Model model)
            String addNewProjectToProjectIdPersist(long projectId,UserSessionBean userSession, Project project,Context context, BindingResult result, Locale locale, Model model)
            String addNewProjectToProjectRootPersist(UserSessionBean userSession, Project project,Context context, BindingResult result,Locale locale, Model model)
            Project getProject(long projectId,UserAccount userAccount,UserSessionBean userSession)
            Project add(Project project)
            Project update(Project project)
            Project delete(Project project)
            void moveTaskToTaskAndChangeTaskOrderInProjectId(Task sourceTask, Task destinationTask)
            void moveTaskToTaskAndChangeTaskOrderInProjectRoot(Task sourceTask, Task destinationTask)
            Project findByProjectId(long projectId)
            Page<Task> findByProject(Project thisProject, Pageable pageable)
            List<Task> findByProject(Project thisProject)
            Project moveProjectToAnotherProject(Project thisProject, Project targetProject)
            Project moveProjectToAnotherContext(Project thisProject, Context newContext)
        }
        class BreadcrumbService {
            Breadcrumb getBreadcrumbForShowProjectRoot(Locale locale, UserSessionBean userSession)
            Breadcrumb getBreadcrumbForShoProjectId(Project thisProject, Locale locale, UserSessionBean userSession)
            Breadcrumb getBreadcrumbForTaskstate(TaskState taskstate, Locale locale, UserSessionBean userSession)
            Breadcrumb getBreadcrumbForUserProfileAndMenu(Locale locale,UserSessionBean userSession)
            Breadcrumb getBreadcrumbForUserChangeName(Locale locale, UserSessionBean userSession)
            Breadcrumb getBreadcrumbForUserChangePassword(Locale locale, UserSessionBean userSession)
            Breadcrumb getBreadcrumbForUserContexts(Locale locale, UserSessionBean userSession)
            Breadcrumb getBreadcrumbForUserContextAdd(Locale locale,UserSessionBean userSession)
            Breadcrumb getBreadcrumbForUserContextEdit(Locale locale, Context context, UserSessionBean userSession)
            Breadcrumb getBreadcrumbForUserContextDelete(Locale locale, Context context, UserSessionBean userSession)
            Breadcrumb getBreadcrumbForUserChangeLanguage(Locale locale, UserSessionBean userSession)
            Breadcrumb getBreadcrumbForMessagesBetweenCurrentAndOtherUser(Locale locale, UserSessionBean userSession)
            Breadcrumb getBreadcrumbForSearchResults(Locale locale, UserSessionBean userSession)
        }
        class UserChatMessageControllerService {
          UserAccountChatMessage sendNewUserMessage(UserAccount thisUser, UserAccount otherUser,ChatMessageForm chatMessageForm)
          Page<UserAccountChatMessage> readAllMessagesBetweenCurrentAndOtherUser(UserAccount receiver,UserAccount sender,Pageable request)
        }
        class TaskLifecycleService {
          Task addToInbox(Task task)
          Task addToProject(Task task)
          Task addToRootProject(Task task)
          Task updatedViaTaskstate(Task task)
          Task updatedViaProject(Task task)
          Task updatedViaProjectRoot(Task task)
          long getMaxOrderIdTaskState(TaskState completed, Context context)
          long getMaxOrderIdProject(Project project, Context context)
          long getMaxOrderIdProjectRoot(Context context)
          String transformTaskIntoProjectGet(Task task, UserSessionBean userSession, Model model)
          Project addProjectFromTaskToModel(Task task, Model model)
          Task addProject(Task task)
        }
        class TaskMove2TaskService {
          void moveTaskToTaskAndChangeTaskOrderInTaskstate(Task sourceTask, Task destinationTask)
          void moveTasksUpByProjectRoot(Task sourceTask, Task destinationTask)
          void moveTasksDownByProjectRoot(Task sourceTask, Task destinationTask)
          void moveTasksUpByProjectId(Task sourceTask, Task destinationTask)
          void moveTasksDownByProjectId(Task sourceTask, Task destinationTask)
          void moveTasksUpByTaskState(Task sourceTask, Task destinationTask)
          void moveTasksDownByTaskState(Task sourceTask, Task destinationTask)
        }
        class TaskMoveService {
          Task moveTaskToAnotherProject(Task task, Project project)
          Task moveTaskToRootProject(Task task)
          Task moveTaskToInbox(Task task)
          Task moveTaskToToday(Task task)
          Task moveTaskToNext(Task task)
          Task moveTaskToWaiting(Task task)
          Task moveTaskToSomeday(Task task)
          Task moveTaskToFocus(Task task)
          Task moveTaskToCompleted(Task task)
          Task moveTaskToTrash(Task task)
          void moveAllCompletedToTrash(Context context)
          void emptyTrash(Context context)
        }
        class TaskStateTabControllerService {
          String getTaskStatePageInbox(Context context,Pageable pageRequest, UserSessionBean userSession,Locale locale, Model model)
          String getTaskStatePageToday(Context context,Pageable pageRequest,UserSessionBean userSession,Locale locale, Model model)
          String getTaskStatePageNext(Context context,Pageable pageRequest,UserSessionBean userSession,Locale locale,Model model)
          String getTaskStatePageWaiting(Context context, Pageable pageRequest,UserSessionBean userSession,Locale locale,Model model)
          String getTaskStatePageScheduled(Context context,Pageable pageRequest,UserSessionBean userSession,Locale locale,Model model)
          String getTaskStatePageFocus(Context context,Pageable pageRequest,UserSessionBean userSession,Locale locale, Model model)
          String getTaskStatePageSomeday(Context context, Pageable pageRequest, UserSessionBean userSession, Locale locale,Model model )
          String getTaskStatePageCompleted(Context context, Pageable pageRequest, UserSessionBean userSession, Locale locale, Model model)
          String getTaskStatePageTrash(Context context,Pageable pageRequest,UserSessionBean userSession,Locale locale,Model model)
          String getTaskStatePageDeleted(Context context, Pageable pageRequest, UserSessionBean userSession, Locale locale, Model model)
          String getTaskStatePageProjects(Context context,Pageable pageRequest, UserSessionBean userSession, Locale locale,Model model)
          String getTaskStatePageAll(Context context,Pageable pageable,UserSessionBean userSession,Locale locale, Model model)
        }
        class TestDataService {
            void createTestData(UserAccount userAccount)
        }
        TestDataService o--> TaskRepository:  taskRepository
        TestDataService o--> ProjectRepository: projectRepository
        TaskStateTabControllerService o---> TaskService: taskService
        TaskStateTabControllerService o--> BreadcrumbService: breadcrumbService
        TaskMoveService o---> TaskService: taskService
        TaskMoveService o--> TaskLifecycleService: taskLifecycleService
        TaskMoveService o--> ProjectService: projectService
        TaskMove2TaskService o--> TaskService: taskService
        TaskLifecycleService o--> TaskService: taskService
        TaskLifecycleService o--> ProjectService: projectService
        UserChatMessageControllerService o--> ChatMessageService: chatMessageService
        ProjectControllerService o---> ProjectService: projectService
        ProjectControllerService o---> TaskService: taskService
        ProjectControllerService o--> BreadcrumbService: breadcrumbService
        ProjectControllerService o--> TaskMove2TaskService: taskMove2TaskService
        BreadcrumbService  o--> TaskService: taskService
    }

    ContextController ---> ContextService: contextService
    PagesController --> Class
    ProjectIdController --> ProjectControllerService: projectControllerService
    ProjectIdController --> TaskMoveService: taskMoveService
    ProjectIdController ---> TaskService: taskService
    ProjectIdController ---> ContextService: contextService
    ProjectIdController ----> BreadcrumbService: breadcrumbService
    ProjectIdTaskMoveController --> TaskMoveService: taskMoveService
    ProjectIdTaskMoveController --> TaskLifecycleService: taskLifecycleService
    ProjectRootController --> ProjectControllerService: projectControllerService
    ProjectRootController ---> TaskService: taskService
    ProjectRootController ----> BreadcrumbService: breadcrumbService
    ProjectRootTaskController --> ProjectControllerService: projectControllerService
    ProjectRootTaskController --> TaskLifecycleService: taskLifecycleService
    ProjectRootTaskController ----> BreadcrumbService: breadcrumbServices
    ProjectRootTaskMoveController --> TaskLifecycleService: taskLifecycleService
    ProjectRootTaskMoveController --> TaskMoveService: taskMoveService
    SearchController --> SearchService: searchService
    SearchController ----> BreadcrumbService: breadcrumbService
    TaskLifecycleController --> TaskLifecycleService: taskLifecycleService
    TaskLifecycleController ----> BreadcrumbService: breadcrumbService
    TaskLifecycleController ---> ContextService: contextService
    TaskMove2TaskController -> TaskMove2TaskService: taskMove2TaskService
    TaskMoveController --> TaskMoveService: taskMoveService
    TaskStateTabController --> TaskStateTabControllerService: taskStateTabControllerService
    TestDataController --> TestDataService: testDataService
    TestDataController --> LoginSuccessService: loginSuccessService
    UserChatMessageController --> UserChatMessageControllerService: userChatMessageControllerService
    UserChatMessageController --> BreadcrumbService: breadcrumbService
    UserLoginController --> LoginSuccessService: loginSuccessService
    UserLoginController --> UserAuthorizationService: userAuthorizationService
    UserPasswordRecoveryController -> UserAccountService: userAccountService
    UserPasswordRecoveryController -> UserAccountPasswordRecoveryService: userAccountPasswordRecoveryService
    UserRegistrationController -> UserAccountService: userAccountService
    UserRegistrationController -> UserAccountRegistrationService: userAccountRegistrationService
    UserSelfserviceController --> UserAuthorizationService: userAuthorizationService
    UserSelfserviceController ----> BreadcrumbService: breadcrumbService
    UserSelfserviceController --> UserAccountService: userAccountService
    UserSelfserviceController ---> ContextService: contextService
}

@enduml
