<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-mongodb="http://www.springframework.org/schema/integration/mongodb"
    xmlns:repository="http://www.springframework.org/schema/data/repository"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/data/jpa
    http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
	http://www.springframework.org/schema/integration/mongodb
	http://www.springframework.org/schema/integration/mongodb/spring-integration-mongodb.xsd
	http://www.springframework.org/schema/integration
	http://www.springframework.org/schema/integration/spring-integration.xsd
    http://www.springframework.org/schema/data/repository
    http://www.springframework.org/schema/data/repository/spring-repository.xsd">
	
	<context:property-placeholder location="classpath:/worklist.properties" />
	
	<bean id="mongoDbFactory"
		class="org.springframework.data.mongodb.core.SimpleMongoDbFactory">
		<constructor-arg name="mongo">
			<bean class="com.mongodb.Mongo" />
		</constructor-arg>
		<constructor-arg name="databaseName" value="test" />
	</bean>

	<bean id="mongoDbMessageStore"
		class="org.springframework.integration.mongodb.store.MongoDbMessageStore">
		<constructor-arg ref="mongoDbFactory" />
	</bean>
	
	<jpa:repositories base-package="org.woehlke.simpleworklist" />
	
	<!-- Explicit Data Source is for use with CloudFoundry.com -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${javax.persistence.jdbc.driver}"/> 
		<property name="url" value="${javax.persistence.jdbc.url}"/> 
		<property name="username" value="${javax.persistence.jdbc.username}"/>
		<property name="password" value="${javax.persistence.jdbc.password}"/>
	</bean>
	
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
  		<property name="dataSource" ref="dataSource"/>
  		<property name="persistenceUnitName" value="simpleListWorkerPU"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="databasePlatform" value="org.hibernate.dialect.MySQL5Dialect"/>
                <property name="showSql" value="true" />
                <property name="generateDdl" value="true"/>
            </bean>
        </property>
        <property name="jpaProperties">
            <!-- set extra properties here, e.g. for Hibernate: -->
            <props>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.generate_statistics">true</prop>
                <prop key="jpa.showSql">false</prop>
                <prop key="jpa.database">MYSQL</prop>
            </props>
        </property>
 	</bean>
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- JPA Configuration -->
	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
	<bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="jpaDialect" ref="jpaDialect" />
	</bean>

	<!-- Transactions -->
	<tx:annotation-driven transaction-manager="transactionManager" />	
	
	<context:component-scan base-package="org.woehlke.simpleworklist" />
	
	<!-- Integration -->
	
	<int:poller default="true" fixed-rate="500" />

	<int:channel id="controlBusChannel" />
	<!-- See also: http://static.springsource.org/spring-integration/reference/htmlsingle/#control-bus 
		http://www.eaipatterns.com/ControlBus.html -->
	<int:control-bus id="controlBus" input-channel="controlBusChannel" />
	
	<int:channel id="registrationProcessEmailSenderChannel">
		<int:queue message-store="mongoDbMessageStore" />
	</int:channel>
	
	<int:service-activator input-channel="registrationProcessEmailSenderChannel"
		output-channel="nullChannel" id="sendEmailToRegisterNewUser"
		ref="emailPipeline" method="sendEmailToRegisterNewUser" />

    <int:channel id="passwordResetEmailSenderChannel">
        <int:queue message-store="mongoDbMessageStore" />
    </int:channel>

    <int:service-activator input-channel="passwordResetEmailSenderChannel"
                           output-channel="nullChannel" id="sendEmailForPasswordReset"
                           ref="emailPipeline" method="sendEmailForPasswordReset" />
		
	<!-- Mail service -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
	    <property name="host" value="${java.mail.host}"/>
	    <property name="port" value="${java.mail.port}"/>
	    <property name="username" value="${java.mail.username}"/>
	    <property name="password" value="${java.mail.password}"/>
	    <property name="javaMailProperties">
	        <props>
	            <!-- Use SMTP-AUTH to authenticate to SMTP server -->
	            <prop key="mail.smtp.auth">${java.mail.smtp.auth}</prop>
	            <!-- Use TLS to encrypt communication with SMTP server -->
	            <prop key="mail.smtp.ssl.enable">${java.mail.smtp.ssl.enable}</prop>
	        </props>
	    </property>
	</bean>

</beans>
